apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "credhub.fullname" . }}
  labels:
{{ include "credhub.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "credhub.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "credhub.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: generate-auth-key-store
          image: openjdk:8
          command:
            - "keytool"
            - "-import"
            - "-noprompt"
            - "-alias"
            - "auth_server_ca"
            - "-file"
            - "/etc/config/auth-server-ca.pem"
            - "-keystore"
            - "/etc/credhub/auth_server_trust_store.jks"
            - "-storepass"
            - "{{ .Values.credhub.authServer.trustStorePassword }}"
          volumeMounts:
            - name: credhub-volume
              mountPath: /etc/credhub/
            - name: config-volume
              mountPath: /etc/config
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9000 # TODO: what should this actually be?
              protocol: TCP
          # TODO: livenessProbe
          # TODO: readinessProbe
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: credhub-volume
              mountPath: /etc/credhub/
            - name: config-volume
              mountPath: /etc/config
      volumes:
        - name: credhub-volume
        - name: config-volume
          configMap:
            name: {{ include "credhub.fullname" . }}
            items:
              - key: spring.yml
                path: spring.yml
              - key: server.yml
                path: server.yml
              - key: security.yml
                path: security.yml
              - key: logging.yml
                path: logging.yml
              - key: log4j2.properties
                path: log4j2.properties
              - key: encryption.yml
                path: encryption.yml
              - key: auth-server.yml
                path: auth-server.yml
              - key: auth-server-ca.pem
                path: auth-server-ca.pem
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
