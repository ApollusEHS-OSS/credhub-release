#!/bin/bash

set -eu

## BEGIN CERTIFICATE INSTALLATION

export JAVA_HOME=/var/vcap/packages/openjdk_1.8.0/jre

# TLS
CERT_FILE=/var/vcap/jobs/credhub/config/cert.crt
PRIVATE_KEY_FILE=/var/vcap/jobs/credhub/config/priv.key
CERT_ALIAS=credhub_tls_cert
KEY_STORE_PATH=/var/vcap/jobs/credhub/config/cacerts.jks
KEY_STORE_PASSWORD=$(< /dev/urandom tr -dc A-Za-z0-9 | head -c32)

# MTLS
MTLS_CA_CERT_FILE=/var/vcap/jobs/credhub/config/mtls_ca_cert.crt
MTLS_TRUST_STORE_PASSWORD=$(< /dev/urandom tr -dc A-Za-z0-9 | head -c32)
MTLS_TRUST_STORE_PATH=/var/vcap/jobs/credhub/config/mtls_trust_store.jks
MTLS_CA_ALIAS=mtls_ca

# DB
DATABASE_TLS_CA_FILE=/var/vcap/jobs/credhub/config/database_ca.pem
DATABASE_VERIFY_CA_ALIAS=database_verify_ca

# UAA
AUTH_SERVER_CA_CERT_FILE=/var/vcap/jobs/credhub/config/auth_server_ca_cert.crt
AUTH_SERVER_CA_ALIAS_BASE=auth_server_ca

#Trust store for DB and UAA connections
TRUST_STORE_PATH=/var/vcap/jobs/credhub/config/trust_store.jks
TRUST_STORE_PASSWORD=$(< /dev/urandom tr -dc A-Za-z0-9 | head -c32)

rm -f /var/vcap/jobs/credhub/config/*.jks

for file in /var/vcap/jobs/credhub/config/application/*.yml; do
  sed -i "s/KEY_STORE_PASSWORD_PLACEHOLDER/${KEY_STORE_PASSWORD}/g" "$file"
  sed -i "s/MTLS_TRUST_STORE_PASSWORD_PLACEHOLDER/${MTLS_TRUST_STORE_PASSWORD}/g" "$file"
  sed -i "s/TRUST_STORE_PASSWORD_PLACEHOLDER/${TRUST_STORE_PASSWORD}/g" "$file"
done
sed -i "s/^\(declare -r trust_store_password=\).*/\1${TRUST_STORE_PASSWORD}/" /var/vcap/jobs/credhub/bin/ctl
sed -i "s/^\(declare -r trust_store_password=\).*/\1${TRUST_STORE_PASSWORD}/" /var/vcap/jobs/credhub/bin/credhub

rm -f ${CERT_FILE} ${PRIVATE_KEY_FILE}

cat > ${CERT_FILE} <<EOL
<%= p('credhub.tls.certificate') %>
EOL

cat > ${PRIVATE_KEY_FILE} <<EOL
<%= p('credhub.tls.private_key') %>
EOL

if [ -s ${CERT_FILE} ]; then
    RANDFILE=/etc/sv/monit/.rnd openssl pkcs12 -export -in ${CERT_FILE} -inkey ${PRIVATE_KEY_FILE} -out cert.p12 -name ${CERT_ALIAS} \
            -password pass:k0*l*s3cur1tyr0ck$

    ${JAVA_HOME}/bin/keytool -importkeystore \
            -srckeystore cert.p12 -srcstoretype PKCS12 -srcstorepass k0*l*s3cur1tyr0ck$ \
            -deststorepass ${KEY_STORE_PASSWORD} -destkeypass ${KEY_STORE_PASSWORD} -destkeystore ${KEY_STORE_PATH} \
            -alias ${CERT_ALIAS}
fi

if [ $(cat $DATABASE_TLS_CA_FILE | wc -c) -ge 2 ]; then
  ${JAVA_HOME}/bin/keytool -import -noprompt \
    -keystore ${TRUST_STORE_PATH} \
    -storepass ${TRUST_STORE_PASSWORD} \
    -alias ${DATABASE_VERIFY_CA_ALIAS} \
    -file ${DATABASE_TLS_CA_FILE}
fi

<%
mtls_ca_certs = p('credhub.authentication.mutual_tls.trusted_cas') || []
mtls_ca_certs.each_with_index do |cert, index|
%>

cat > ${MTLS_CA_CERT_FILE} <<EOL
<%= cert %>
EOL

<%=
"${JAVA_HOME}/bin/keytool -import -noprompt -trustcacerts \
  -keystore ${MTLS_TRUST_STORE_PATH} \
  -storepass ${MTLS_TRUST_STORE_PASSWORD} \
  -alias ${MTLS_CA_ALIAS}#{index} \
  -file ${MTLS_CA_CERT_FILE}"
%>

<% end %>

<% if p('credhub.authentication.uaa.enabled')
invalid_auth_server_ca_certs = "At least one trusted CA certificate for UAA must be provided. Please add a value at 'credhub.authentication.uaa.ca_certs[]' and redeploy."

begin
  p('credhub.authentication.uaa.ca_certs')
rescue UnknownProperty
  raise invalid_auth_server_ca_certs
end

auth_server_ca_certs = p('credhub.authentication.uaa.ca_certs') || []

if auth_server_ca_certs.kind_of?(Array) && auth_server_ca_certs.any?
  auth_server_ca_certs.each_with_index do |cert, index|
    cert.scan(/-----BEGIN CERTIFICATE-----[A-z0-9+\/\s=]*-----END CERTIFICATE-----/m).each_with_index do |sub_cert, sub_cert_index|
%>

cat > ${AUTH_SERVER_CA_CERT_FILE} <<EOL
<%= sub_cert %>
EOL

  <%=
"${JAVA_HOME}/bin/keytool -import -noprompt -trustcacerts \
  -keystore ${TRUST_STORE_PATH} \
  -storepass ${TRUST_STORE_PASSWORD} \
  -alias ${AUTH_SERVER_CA_ALIAS_BASE}#{index}_#{sub_cert_index} \
  -file ${AUTH_SERVER_CA_CERT_FILE}"
  %>

<%
    end
  end
else
  raise invalid_auth_server_ca_certs
end
end %>

# remove intermediate files
rm -f cert.p12 ${CERT_FILE} ${PRIVATE_KEY_FILE} ${MTLS_CA_CERT_FILE} ${AUTH_SERVER_CA_CERT_FILE}

# restrict file permissions
chown vcap /var/vcap/jobs/credhub/config/*.jks
chmod 600 /var/vcap/jobs/credhub/config/*.jks

## END CERTIFICATE INSTALLATION
